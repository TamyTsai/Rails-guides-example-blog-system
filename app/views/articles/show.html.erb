<h1><%= @article.title %></h1>
<p><%= @article.body %></p>

<ul>
    <li><%= link_to "編輯文章", edit_article_path(@article) %></li>
    <li><%= link_to "刪除文章", article_path(@article), data: {turbo_method: :delete, turbo_confirm: "確定刪除此文章？"} %></li>
    <!-- 在上述程式碼中，我們使用 data 選項 來設定「刪除」連結的 data-turbo-method 和 data-turbo-confirm HTML 屬性。
        這兩個屬性都會連結到 Turbo，它預設包含在新的 Rails 應用程式中。
        data-turbo-method="delete" 會讓 連結 發出 DELETE 要求，而不是 GET 要求。
        data-turbo-confirm="確定刪除此文章？" 會在連結被按一下時顯示 確認對話框。如果使用者取消對話框，要求將會中止。 -->
</ul>

<h2>留言</h2>
<%= render @article.comments %>
<!-- 這將在 app/views/comments/_comment.html.erb 中為 @article.comments 集合中 的 每則留言 呈現一次 partial內容。
    當 render 方法反覆運算 @article.comments 集合 時，它會將 每則留言 指定給 一個名為 partial 內容 的 區域變數，在本例中為 comment，然後在partial內容中 提供給我們 顯示。 -->

<h2>新增留言：</h2>
<%= render 'comments/form' %>
<!-- 第二個呈現只定義我們要呈現的部分範本，comments/form。
    Rails 夠聰明，可以找出字串中的正斜線，並了解您要呈現 app/views/comments 目錄中的 _form.html.erb 檔案。 -->
